/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T          &kp Y        &kp U      &kp I          &kp O    &kp P     &kp BSPC
&mo 3      &kp A  &kp S  &kp D      &kp F      &kp G          &kp H        &kp J      &kp K          &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B          &kp N        &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LCTRL  &kp SPACE  &lt 1 SPACE    &lt 2 SPACE  &kp SPACE  &kp RIGHT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5           &kp N6    &kp N7         &kp N8    &kp N9     &kp N0  &kp DEL
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &kp HOME  &kp PAGE_UP    &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &kp LG(LS(S))    &kp END   &kp PAGE_DOWN  &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE        &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DELETE
&kp LCTRL  &trans    &trans  &trans    &trans    &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp DOUBLE_QUOTES
&kp LSHFT  &trans    &trans  &trans    &trans    &kp GRAVE    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp SINGLE_QUOTE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp LC(LS(ESCAPE))  &trans          &kp UP_ARROW  &trans     &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans              &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&kp F1              &kp F2          &kp F3        &kp F4     &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                                  &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
